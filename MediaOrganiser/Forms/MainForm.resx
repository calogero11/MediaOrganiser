<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f32+2i1a7la5AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="TtMainMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>